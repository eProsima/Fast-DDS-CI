name: get_workflow_id
description: Get the Id of the las workflow run that has successfully upload the artifact to look for
  # This action is not used anymore as dawidd6/action-download-artifact already look for the workflow id

inputs:

  workflow_source:
    description: Name of the workflow to look for
    required: true

  artifact_name:
    description: Name of the artifact to look for
    required: true

  workflow_source_repository:
    description: Name of the repository to look for the job id [this repository]
    required: false
    default: $GITHUB_REPOSITORY

  id_job_result:
    description: Name of the env variable to store the job id
    required: false
    default: job_id

  job_status:
    description: Status of the finished workflow run to look for
    required: false
    default: completed

  secret_token:
    description: 'Unused parameter'
    required: false

runs:
  using: composite
  steps:

    - name: Get build eProsima dependencies Job Id
      run: |

        echo "::group::Get Id from workflow ${{ inputs.workflow_source }} for artifact ${{ inputs.artifact_name }}"

        echo "Access to url: $GITHUB_API_URL/repos/${{ inputs.workflow_source_repository }}/actions/workflows/${{ inputs.workflow_source }}/runs"

        # First, get the JSON with all workflow run
        JOB_ID_RESULT=""
        RUNS=$(curl -sL https://api.github.com/repos/jparisu/eProsima-CI/actions/workflows/build_fastdds.yml/runs)

        # Loop in descending order each workflow run
        for JOB_ID in $(echo "${RUNS}" | jq '.workflow_runs[] | select(.status == "${{ inputs.job_status }}") | .id')
        do

            # Get artifacts for current workflow run
            ARTIFACTS=$(curl -sL $GITHUB_API_URL/repos/${{ inputs.workflow_source_repository }}/actions/runs/${JOB_ID}/artifacts | jq '.artifacts')

            # Check if specified artifact exists in current workflow run
            ARTIFACT_ID=$(echo "${ARTIFACTS}" | jq --arg artifact "${{ inputs.artifact_name }}" '.[] | select(.name == "${{ inputs.artifact_name }}") | .id')
            if [ "${ARTIFACT_ID}" != "" ]; then
                echo "5. artifacts: ${ARTIFACT_ID}"
                JOB_ID_RESULT="${ARTIFACT_ID}"
                break
            fi

        done

        echo "Job Id: <${JOB_ID_RESULT}>"
        if [ "${JOB_ID_RESULT}" == "" ]; then
            exit 1
        fi

        echo "${{ inputs.id_job_result }}=${JOB_ID_RESULT}" >> $GITHUB_ENV

        echo "::endgroup::"

      shell: bash

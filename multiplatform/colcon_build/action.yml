name: 'colcon_build'
description: 'Import some repositories and their versions from a yaml file'

inputs:

  colcon_meta_file:
    description: 'colcon.meta file to set cmake options. If empty, it uses an empty file'
    required: false
    default: ''

  colcon_build_args:
    description: 'args to pass to colcon build command (use arg cmake_args for CMake options)'
    required: false
    default: ''

  colcon_build_args_default:
    description: 'Default args to pass to colcon build command (use arg cmake_args for CMake options)'
    required: false
    default: '--event-handlers=console_direct+'

  cmake_args:
    description: 'CMake arguments'
    required: false
    default: ''

  cmake_args_default:
    description: 'Default CMake arguments'
    required: false
    default: '-DCMAKE_CXX_FLAGS="-Werror -Wall"'

  workspace:
    description: 'Workspace to build'
    required: false
    default: ''

  workspace_dependencies:
    description: 'Workspace to source where dependencies are'
    required: false
    default: ''

runs:
  using: composite
  steps:

    - name: Run in ubuntu
      uses: jparisu/eProsima-CI/ubuntu/colcon_build@feature/windows-support
      if: runner.os == 'Linux'
      with:
        colcon_meta_file: ${{ inputs.colcon_meta_file }}
        colcon_build_args: ${{ inputs.colcon_build_args }}
        colcon_build_args_default: ${{ inputs.colcon_build_args_default }}
        cmake_args: ${{ inputs.cmake_args }}
        cmake_args_default: ${{ inputs.cmake_args_default }}
        workspace: ${{ inputs.workspace }}
        workspace_dependencies: ${{ inputs.workspace_dependencies }}

    - name: Run in windows
      uses: jparisu/eProsima-CI/windows/colcon_build@feature/windows-support
      if: runner.os == 'Windows'
      with:
        colcon_meta_file: ${{ inputs.colcon_meta_file }}
        colcon_build_args: ${{ inputs.colcon_build_args }}
        colcon_build_args_default: ${{ inputs.colcon_build_args_default }}
        cmake_args: ${{ inputs.cmake_args }}
        # cmake_args_default: ${{ inputs.cmake_args_default }}
        workspace: ${{ inputs.workspace }}
        workspace_dependencies: ${{ inputs.workspace_dependencies }}
        # TODO find a way to use it for windows
